<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>com.gitenter.hook</groupId>
	<artifactId>postreceive</artifactId>
	<version>0.0.2-prototype</version>
	<packaging>jar</packaging>

	<name>gihook post-receive</name>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
		<java.version>1.8</java.version>
		<maven.compiler.source>1.8</maven.compiler.source>
		<maven.compiler.target>1.8</maven.compiler.target>
		<spring-version>5.0.2.RELEASE</spring-version>
	</properties>

	<build>
		<plugins>
			<plugin>
				<artifactId>maven-assembly-plugin</artifactId>
				<configuration>
					<archive>
						<manifest>
							<mainClass>com.gitenter.hook.postreceive.PostReceiveApplication</mainClass>
						</manifest>
					</archive>
					<descriptorRefs>
						<descriptorRef>jar-with-dependencies</descriptorRef>
					</descriptorRefs>
					<outputDirectory>../../envelope/src/main/resources/git-server-side-hooks</outputDirectory>
				</configuration>
			</plugin>
		</plugins>
	</build>

	<dependencies>
		<!-- local packages -->
		<dependency>
			<groupId>com.gitenter</groupId>
			<artifactId>gitar</artifactId>
			<version>0.0.2-prototype</version>
		</dependency>
		<dependency>
			<groupId>com.gitenter</groupId>
			<artifactId>protease</artifactId>
			<version>0.0.2-prototype</version>
		</dependency>
		<dependency>
			<groupId>com.gitenter</groupId>
			<artifactId>enzymark</artifactId>
			<version>0.0.2-prototype</version>
		</dependency>

		<!-- Compile -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-core</artifactId>
			<version>${spring-version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-beans</artifactId>
			<version>${spring-version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-context</artifactId>
			<version>${spring-version}</version>
		</dependency>
		<!--
			TODO:
			The following javax and sun packages are for solving the
			"java.lang.NoClassDefFoundError: javax/xml/bind/JAXBException"
			error, raised by the `entityManagerFactory` inside of
			`com/gitenter/protease/config/JpaConfig.class`.

			Without the import it works with Java 8, and with
			`==add-modules java.xml.bind` it works with Java 9/10.

			The dependencies are added in here so it can work in all cases,
			but in the long term we should consider refactoring `JpaConfig`
			to remove this dependency.

			Refer to: https://stackoverflow.com/questions/43574426/how-to-resolve-java-lang-noclassdeffounderror-javax-xml-bind-jaxbexception-in-j
		-->
		<dependency>
		    <groupId>javax.xml.bind</groupId>
		    <artifactId>jaxb-api</artifactId>
		    <version>2.2.11</version>
		</dependency>
		<dependency>
		    <groupId>com.sun.xml.bind</groupId>
		    <artifactId>jaxb-core</artifactId>
		    <version>2.2.11</version>
		</dependency>
		<dependency>
		    <groupId>com.sun.xml.bind</groupId>
		    <artifactId>jaxb-impl</artifactId>
		    <version>2.2.11</version>
		</dependency>
		<dependency>
		    <groupId>javax.activation</groupId>
		    <artifactId>activation</artifactId>
		    <version>1.1.1</version>
		</dependency>

		<!-- Test -->
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.12</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-test</artifactId>
			<version>${spring-version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-core</artifactId>
			<version>2.18.3</version>
			<scope>test</scope>
		</dependency>
	</dependencies>

</project>
