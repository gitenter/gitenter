version: "3"
services:

  # Then the database can be connected through `psql -h postgres -U postgres`
  # from a different container with `psql` installed (e.g. `dev-machine`).
  postgres:
    image: postgres:11.1
    volumes:
      - ./database:/database
      - ./database/docker_init.sh:/docker-entrypoint-initdb.d/docker_init.sh
    restart: always
    environment:
      POSTGRES_PASSWORD: postgres

  redis-session:
    image: redis:5.0.5
    restart: always

  # dev-machine:
  #   build:
  #     context: ./docker/dev-machine
  #     dockerfile: ./Dockerfile
  #   volumes:
  #     - ../gitenter:/gitenter
  #   depends_on:
  #     - postgres
  #     - redis-session
  #   tty: true

  git:
    build:
      context: ./ssheep
      dockerfile: ./Dockerfile
    environment:
      - PYTHON_PROFILES_ACTIVE=docker
      - SPRING_PROFILES_ACTIVE=docker
    volumes:
#      - ../../.ssh/id_rsa.pub:/home/git/.ssh/authorized_keys # This is the pseudo-authorized key for testing purposes, which should be removed later.
      - git-repo:/home/git
    ports:
      - "8822:22"
    depends_on:
      - postgres
    tty: true
    restart: always

  web:
    build:
      context: ./capsid
      dockerfile: ./Dockerfile
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    volumes:
      #- ./deployment/docker/tomcat/hello-world.war:/usr/local/tomcat/webapps/ROOT.war
      - git-repo:/home/git # TODO: change it to something else together with GitSourceConfig.java
    ports:
      - "8886:8080"
    depends_on:
      - postgres
      - redis-session
    tty: true
    restart: always

  nginx:
    build:
      context: ./docker/nginx
      dockerfile: ./Dockerfile
    ports:
      - "8887:80"
      - "443:443"
    command: [nginx, '-g', 'daemon off;']
    depends_on:
      - git
      - web

  # selenium-test:
  #   build:
  #     context: ./docker/selenium-test
  #     dockerfile: ./Dockerfile
  #   volumes:
  #     - ./selenium-test:/selenium-test
  #   tty: true

volumes:
  git-repo:
