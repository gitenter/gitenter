version: "3"
services:

  # Then the database can be connected through `psql -h postgres -U postgres`
  # from a different container with `psql` installed (e.g. `dev-machine`).
  postgres:
    image: postgres:11.1
    volumes:
      - ./database:/database
      - ./database/docker_init.sh:/docker-entrypoint-initdb.d/docker_init.sh
    restart: always
    environment:
      POSTGRES_PASSWORD: postgres

  redis-session:
    image: redis:5.0.5
    restart: always

  git:
    build:
      context: ./ssheep
      dockerfile: ./Dockerfile
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    # TODO:
    # By sharing the `/home/git` folder as a volume, the system files in it are
    # also shared to `web_app` container.
    # > root@02a50eab24c4:/home/git# ls -la
    # > -rw-------  1 git  root  788 Aug 16 19:58 .bash_history
    # > -rw-r--r--  1 git  root 3771 Apr  4  2018 .bashrc
    # > drwx------  4 git  root 4096 Jun 25 13:03 .cache
    # > -rw-r--r--  1 git  root  807 Apr  4  2018 .profile
    # > ...
    #
    # Possible solutions:
    # Put git folder to a different path, e.g. `/data` or `/home/git/data`. Need
    # to change the shellscript for `AuthorizedKeyCommand`. Also the git UI interface
    # becomes weird.
    volumes:
      - git-repo:/home/git
    ports:
      - "8822:22"
    depends_on:
      - postgres
    tty: true
    restart: always

  web_app:
    build:
      context: ./capsid
      dockerfile: ./Dockerfile
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    volumes:
      - git-repo:/data
    ports:
      - "8886:8080"
    depends_on:
      - postgres
      - redis-session
    tty: true
    restart: always

  nginx:
    build:
      context: ./docker/nginx
      dockerfile: ./Dockerfile
    ports:
      - "8887:80"
      - "443:443"
    command: [nginx, '-g', 'daemon off;']
    depends_on:
      - git
      - web_app

volumes:
  git-repo:
